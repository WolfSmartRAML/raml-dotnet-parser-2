import RamlWrapper = require('../artifacts/raml08parser');
import core = require("./parserCore");
import hl = require('../highLevelAST');
import Opt = require('../../Opt');
export declare function load(pth: string): core.BasicNode;
export declare function expandTraitsAndResourceTypes(api: RamlWrapper.Api): RamlWrapper.Api;
export declare function completeRelativeUri(res: RamlWrapper.Resource): string;
export declare function absoluteUri(res: RamlWrapper.Resource): string;
export declare function qName(c: core.BasicNode): string;
export declare function allTraits(a: RamlWrapper.Api): RamlWrapper.Trait[];
export declare function allResourceTypes(a: RamlWrapper.Api): RamlWrapper.ResourceType[];
export declare function relativeUriSegments(res: RamlWrapper.Resource): string[];
export declare function parentResource(method: RamlWrapper.Method): Opt<RamlWrapper.Resource>;
export declare function parent(resource: RamlWrapper.Resource): Opt<RamlWrapper.Resource>;
export declare function getChildResource(container: RamlWrapper.Resource | RamlWrapper.Api, relPath: string): Opt<RamlWrapper.Resource>;
export declare function getResource(container: RamlWrapper.Api | RamlWrapper.Resource, path: string[]): Opt<RamlWrapper.Resource>;
export declare function getChildMethod(resource: RamlWrapper.Resource, method: string): RamlWrapper.Method[];
export declare function getMethod(container: RamlWrapper.Resource | RamlWrapper.Api, path: string[], method: string): RamlWrapper.Method[];
export declare function ownerApi(method: RamlWrapper.Method | RamlWrapper.Resource): RamlWrapper.Api;
export declare function methodId(method: RamlWrapper.Method): string;
export declare function isOkRange(response: RamlWrapper.Response): boolean;
export declare function allResources(api: RamlWrapper.Api): RamlWrapper.Resource[];
export declare function uriParameters(resource: RamlWrapper.Resource): RamlWrapper.Parameter[];
export declare function baseUriParameters(api: RamlWrapper.Api): RamlWrapper.Parameter[];
export declare function absoluteUriParameters(res: RamlWrapper.Resource): RamlWrapper.Parameter[];
export declare class HelperUriParam implements RamlWrapper.Parameter {
    private _name;
    private _parent;
    constructor(_name: string, _parent: core.BasicNode);
    wrapperClassName(): string;
    getKind(): string;
    name(): string;
    "type"(): string;
    location(): RamlWrapper.ParameterLocation;
    "default"(): string;
    xml(): any;
    sendDefaultByClient(): boolean;
    example(): string;
    schema(): string;
    repeat(): boolean;
    enum(): string[];
    collectionFormat(): string;
    required(): boolean;
    readOnly(): boolean;
    facets(): any[];
    scope(): string[];
    displayName(): string;
    description(): RamlWrapper.MarkdownString;
    usage(): any;
    parent(): core.BasicNode;
    highLevel(): hl.IHighLevelNode;
    errors(): hl.ValidationIssue[];
    definition(): any;
    runtimeDefinition(): any;
}
